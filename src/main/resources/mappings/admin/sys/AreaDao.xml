<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qhwl.admin.sys.dao.AreaDao">

	<sql id="areaColumns">
		a.id,
		a.parent_id AS "parent.id",
		a.parent_ids,
		a.code,
		a.name,
		a.sort,
		a.type,
		a.remarks,
		a.create_by AS "createBy.id",
		a.create_date,
		a.update_by AS "updateBy.id",
		a.update_date,
		a.del_flag,
		p.name AS "parent.name"
	</sql>

	<sql id="areaJoins">
		LEFT JOIN sys_office p ON p.id = a.parent_id
	</sql>
	<select id="selectByType" resultType="Area">
		SELECT
		<include refid="areaColumns" />
		FROM sys_area a
		<include refid="areaJoins" />
		WHERE a.type = #{type}
	</select>
	<select id="selectByParentId" resultType="Area">
		SELECT
		<include refid="areaColumns" />
		FROM sys_area a
		<include refid="areaJoins" />
		WHERE a.parent_id = #{parentId}
	</select>
	<select id="get" resultType="Area">
		SELECT
		<include refid="areaColumns" />
		FROM sys_area a
		<include refid="areaJoins" />
		WHERE a.id = #{id}
	</select>

	<select id="findList" resultType="Area">
		SELECT
		<include refid="areaColumns" />
		FROM sys_area a
		<include refid="areaJoins" />
		WHERE a.del_flag = #{DEL_FLAG_NORMAL}
		<!-- 数据范围过滤 -->
		${sqlMap.dsf}
		OR a.id = #{currentUser.office.area.id}
		ORDER BY a.code
	</select>

	<select id="findAllList" resultType="Area">
		SELECT
		<include refid="areaColumns" />
		FROM sys_area a
		<include refid="areaJoins" />
		WHERE a.del_flag = #{DEL_FLAG_NORMAL}
		ORDER BY a.code
	</select>

	<select id="findByParentIdsLike" resultType="Area">
		SELECT
		a.id,
		a.parent_id AS "parent.id",
		a.parent_ids
		FROM sys_area a
		WHERE a.del_flag = #{DEL_FLAG_NORMAL} AND a.parent_ids
		LIKE #{parentIds}
		ORDER BY a.code
	</select>

	<insert id="insert">
		INSERT INTO sys_area(
		id,
		parent_id,
		parent_ids,
		code,
		name,
		sort,
		type,
		create_by,
		create_date,
		update_by,
		update_date,
		remarks,
		del_flag
		) VALUES (
		#{id},
		#{parent.id},
		#{parentIds},
		#{code},
		#{name},
		#{sort},
		#{type},
		#{createBy.id},
		#{createDate},
		#{updateBy.id},
		#{updateDate},
		#{remarks},
		#{delFlag}
		)
	</insert>

	<update id="update">
		UPDATE sys_area SET
		parent_id = #{parent.id},
		parent_ids = #{parentIds},
		code = #{code},
		name = #{name},
		sort = #{sort},
		type = #{type},
		update_by = #{updateBy.id},
		update_date = #{updateDate},
		remarks = #{remarks}
		WHERE id = #{id}
	</update>

	<update id="updateParentIds">
		UPDATE sys_area SET
		parent_id = #{parent.id},
		parent_ids = #{parentIds}
		WHERE id = #{id}
	</update>

	<!-- 特性：区域是一个树结构，删除一个节点会同时删除他的子节点 SQL语句中的OR parent_ids LIKE 就是实现这个功能的 -->
	<update id="delete">
		UPDATE sys_area SET
		del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id} OR parent_ids LIKE
		<if test="dbName == 'oracle'">'%,'||#{id}||',%'</if>
		<if test="dbName == 'mssql'">'%,'+#{id}+',%'</if>
		<if test="dbName == 'mysql'">CONCAT('%,', #{id}, ',%')</if>
	</update>
	
	<!-- 根据多个id查询出一个列表 -->
	<select id="selectByIdIn" resultType="Area">
		SELECT * FROM sys_area where id in
		<foreach close=")" collection="list" item="item" open="(" separator=",">
          #{item}
        </foreach>
	</select>	
    <!--通过地域表id查抄名称-->
    <select id="selectAreaNameById" parameterType="java.lang.String" resultType="java.lang.String">
       select 
             t.name 
       from sys_area t 
       where 
             t.id=#{id}
    </select>
</mapper>