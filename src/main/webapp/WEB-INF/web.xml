<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" version="2.5">

	<display-name>jeesite</display-name>

	<!-- Spring Context ConfigLocation -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath*:/spring-context*.xml</param-value>
	</context-param>
	<listener>
		<listener-class>com.qhwl.admin.sys.listener.WebContextListener</listener-class>
	</listener>

	<!-- 在spring mvc中，为了随时都能取到当前请求的request对象，可以使用RequestContextHolder，需要配置RequestContextListener -->
	<listener>
		<listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
	</listener>

	<!-- 防止xss攻击过滤器 -->
	<filter>
		<filter-name>XssEscape</filter-name>
		<filter-class>com.qhwl.common.xss.XssFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>XssEscape</filter-name>
		<url-pattern>/*</url-pattern>
		<dispatcher>REQUEST</dispatcher>
	</filter-mapping>

	<!-- Spring 编码过滤器 -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<!-- 处理微服务器请求
	<filter>
		<filter-name>jfinal</filter-name>
		<filter-class>com.jfinal.core.JFinalFilter</filter-class>
		<init-param>
			<param-name>configClass</param-name>
			<param-value>com.jfinal.weixin.demo.WeixinConfig</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>jfinal</filter-name>
		<url-pattern>/weixin/*</url-pattern>
	</filter-mapping> -->
	<!--<servlet> <servlet-name>WXServlet</servlet-name> <servlet-class>com.qhwl.common.servlet.WXServlet</servlet-class> </servlet> <servlet-mapping> <servlet-name>WXServlet</servlet-name> 
		<url-pattern>/wx/*</url-pattern> </servlet-mapping> -->
	<!-- 会员中心登陆过滤器 -->
	<filter>
		<filter-name>login</filter-name>
		<filter-class>com.qhwl.member.filter.LoginFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>login</filter-name>
		<url-pattern>/wx/*</url-pattern>
	</filter-mapping>

	<!-- Apache Shiro -->
	<filter>
		<filter-name>shiroFilter</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
		<init-param>
			<param-name>targetFilterLifecycle</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>shiroFilter</filter-name>
		<url-pattern>*.do</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>shiroFilter</filter-name>
		<url-pattern>*.java</url-pattern><!-- CKFinder中需要用到登录用户的信息，要拦截.java -->
	</filter-mapping>
	<filter-mapping>
		<filter-name>shiroFilter</filter-name>
		<url-pattern>/servlet/adminValidateCodeServlet</url-pattern>
		<!-- 图片验证码需要使用session。后台的session由shiro管理，必须走shiroFilter才能正确的拿到session -->
	</filter-mapping>

	<!-- PageCache, cache .html suffix. <filter> <filter-name>PageCacheFilter</filter-name> <filter-class>com.qhwl.common.filter.PageCachingFilter</filter-class> 
		</filter> <filter-mapping> <filter-name>PageCacheFilter</filter-name> <url-pattern>*.html</url-pattern> </filter-mapping> -->

	<!-- SiteMesh -->
	<filter>
		<filter-name>sitemeshFilter</filter-name>
		<filter-class>com.opensymphony.sitemesh.webapp.SiteMeshFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>sitemeshFilter</filter-name>
		<url-pattern>*.do</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>sitemeshFilter</filter-name>
		<url-pattern>*.htm</url-pattern>
	</filter-mapping>

	<!--前台 Spring MVC Servlet -->
	<servlet>
		<servlet-name>springServletFront</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath*:/spring-mvc-front.xml</param-value>
		</init-param>
		<load-on-startup>2</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>springServletFront</servlet-name>
		<url-pattern>*.htm</url-pattern>
	</servlet-mapping>

	<!--后台 Spring MVC Servlet -->
	<servlet>
		<servlet-name>springServletAdmin</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath*:/spring-mvc-admin.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>springServletAdmin</servlet-name>
		<url-pattern>*.do</url-pattern>
	</servlet-mapping>
	<!-- <listener>
		<listener-class>com.qhwl.mobile.admin.TaskManager</listener-class>
	</listener> -->
	<!-- Activiti <servlet> <servlet-name>RestletServlet</servlet-name> <servlet-class>org.restlet.ext.servlet.ServerServlet</servlet-class> <init-param> 
		<param-name>org.restlet.application</param-name> <param-value>com.qhwl.admin.act.rest.ActRestApplication</param-value> </init-param> </servlet> <servlet-mapping> 
		<servlet-name>RestletServlet</servlet-name> <url-pattern>/act/rest/service/*</url-pattern> </servlet-mapping> -->
	<!-- DruidStatView -->
	<servlet>
		<servlet-name>DruidStatView</servlet-name>
		<servlet-class>com.alibaba.druid.support.http.StatViewServlet</servlet-class>
		<!-- <init-param> <param-name>allow</param-name> <param-value>127.0.0.1</param-value> </init-param> -->
		<init-param>
			<!-- 允许清空统计数据 -->
			<param-name>resetEnable</param-name>
			<param-value>true</param-value>
		</init-param>
		<init-param>
			<!-- 用户名 -->
			<param-name>loginUsername</param-name>
			<param-value>admin</param-value>
		</init-param>
		<init-param>
			<!-- 密码 -->
			<param-name>loginPassword</param-name>
			<param-value>password2016</param-value>
		</init-param>
	</servlet>
	<servlet-mapping>
		<servlet-name>DruidStatView</servlet-name>
		<url-pattern>/druid/*</url-pattern>
	</servlet-mapping>

	<!-- CKFinder start -->
	<servlet>
		<servlet-name>CKFinderConnectorServlet</servlet-name>
		<servlet-class>com.qhwl.common.web.CKFinderConnectorServlet</servlet-class>
		<init-param>
			<param-name>XMLConfig</param-name>
			<param-value>/WEB-INF/ckfinder.xml</param-value>
		</init-param>
		<init-param>
			<param-name>debug</param-name>
			<param-value>false</param-value>
		</init-param>
		<init-param>
			<param-name>configuration</param-name>
			<param-value>com.qhwl.common.web.CKFinderConfig</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>CKFinderConnectorServlet</servlet-name>
		<url-pattern>/static/ckfinder/core/connector/java/connector.java</url-pattern>
	</servlet-mapping>
	<filter>
		<filter-name>FileUploadFilter</filter-name>
		<filter-class>com.ckfinder.connector.FileUploadFilter</filter-class>
		<init-param>
			<param-name>sessionCookieName</param-name>
			<param-value>JSESSIONID</param-value>
		</init-param>
		<init-param>
			<param-name>sessionParameterName</param-name>
			<param-value>jsessionid</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>FileUploadFilter</filter-name>
		<url-pattern>/static/ckfinder/core/connector/java/connector.java</url-pattern>
	</filter-mapping>
	<!-- CKFinder end -->

	<!-- Userfiles download -->
	<servlet>
		<servlet-name>UserfilesDownloadServlet</servlet-name>
		<servlet-class>com.qhwl.common.servlet.UserfilesDownloadServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>UserfilesDownloadServlet</servlet-name>
		<url-pattern>/userfiles/*</url-pattern>
	</servlet-mapping>

	<!-- 从文件存储系统下载文件，图片可实时生成缩略图 -->
	<servlet>
		<servlet-name>FileStorageDownloadServlet</servlet-name>
		<servlet-class>com.qhwl.common.servlet.FileStorageDownloadServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>FileStorageDownloadServlet</servlet-name>
		<url-pattern>/filestorage/*</url-pattern>
	</servlet-mapping>

	<!-- 图片验证码 Validate code -->
	<servlet>
		<servlet-name>ValidateCodeServlet</servlet-name>
		<servlet-class>com.qhwl.common.servlet.ValidateCodeServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>ValidateCodeServlet</servlet-name>
		<url-pattern>/servlet/adminValidateCodeServlet</url-pattern>
		<!-- 图片验证码需要使用session。后台的session由shiro管理，/servlet/adminValidateCodeServlet走shiroFilter才能正确的拿到session -->
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>ValidateCodeServlet</servlet-name>
		<url-pattern>/servlet/validateCodeServlet</url-pattern>
	</servlet-mapping>

	<!-- FineReport <servlet> <servlet-name>ReportServer</servlet-name> <servlet-class>com.fr.web.ReportServlet</servlet-class> </servlet> <servlet-mapping> 
		<servlet-name>ReportServer</servlet-name> <url-pattern>/ReportServer</url-pattern> </servlet-mapping> -->

	<!-- [INSERT FRAGMENT HERE] -->

	<!-- Session过期时间配置，在这里配置是无效的。 因为使用shiro来管理权限、用户、登录，Session过期时间也由shiro管理 请修改"fdp.properties" 文件 "session.sessionTimeout" 参数. <session-config> <session-timeout>30</session-timeout> 
		</session-config> -->

	<!-- Error page -->
	<!-- <error-page> <exception-type>java.lang.Throwable</exception-type> <location>/WEB-INF/views/error/500.jsp</location> </error-page> -->

	<!-- 去除jsp中的空行 -->
	<servlet>
		<servlet-name>jsp</servlet-name>
		<servlet-class>org.apache.jasper.servlet.JspServlet</servlet-class>
		<init-param>
			<param-name>trimSpaces</param-name>
			<param-value>true</param-value>
		</init-param>
		<load-on-startup>3</load-on-startup>
	</servlet>

	<!-- 全局的404\500页面，所有的404\500状态码，都会展示这个页面。如a.js没找到404也会展示这个404页面，与spring没有关系 -->
	<error-page>
		<error-code>500</error-code>
		<location>/WEB-INF/views/error/500.jsp</location>
	</error-page>
	<error-page>
		<error-code>404</error-code>
		<location>/WEB-INF/views/error/404.jsp</location>
	</error-page>
	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
		<welcome-file>index.html</welcome-file>
	</welcome-file-list>
</web-app>